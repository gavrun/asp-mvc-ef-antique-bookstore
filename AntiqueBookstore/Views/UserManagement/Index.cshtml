@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model AntiqueBookstore.Models.UserManagementViewModel

@{
    ViewData["Title"] = "User Management";
}

@* TempData messages here or partial _StatusMessage.cshtml*@

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["WarningMessage"] != null)
{
    <div class="alert alert-warning" role="alert">
        @TempData["WarningMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
} 
@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info" role="alert">
        @TempData["InfoMessage"]
    </div>
}


<h2>@ViewData["Title"]</h2>
<hr />

<p>Link User account to Employee record.</p>

@Html.AntiForgeryToken() @* CSRF for JS *@

@* INFO: Block with information about Roles/Levels, like in Employees/Index *@
@*
<div class="row mb-4">
    <div class="col-md-6">
        <h5>Role Information</h5>
        <p>Level 1 corresponds to 'Manager' role.</p>
        <p>Level 2 corresponds to 'Sales' role.</p>
        <p>Other levels do not grant application roles.</p>
    </div>
</div>
*@

<table class="table table-striped table-hover">

    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Role</th> @* current Identity Role *@
            <th>Linked To</th> @* linked Employee *@
            <th>Actions</th>
        </tr>
    </thead>

    <tbody>

        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    @if (user.IsLinked)
                    {
                        @user.LinkedEmployeeName
                        <small class="text-muted"> (ID: @user.LinkedEmployeeId)</small>
                    }
                    else
                    {
                        <span class="text-muted fst-italic">Not Linked</span>
                    }
                </td>
                <td>
                    @if (user.Roles.Any())
                    {
                        @string.Join(", ", user.Roles)
                    }
                    else
                    {
                        <span class="text-muted fst-italic">No Roles Assigned</span>
                    }
                </td>
                <td>
                    @if (user.IsLinked)
                    {
                        // Buttons for the linked User

                        // Sync Role button (inside the form) [btn-outline-info]
                        <form asp-action="SyncRole" method="post" class="d-inline me-1">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="userId" value="@user.UserId" />
                            <button type="submit" class="btn btn-sm btn-outline-info" title="Sync role based on current employee level">
                                <i class="bi bi-arrow-repeat"></i> Sync Role
                            </button>
                        </form>

                        // Remove Role button (inside the form) [btn-outline-danger]
                        <form asp-action="RemoveRole" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="employeeId" value="@user.LinkedEmployeeId" />
                            <button type="submit" class="btn btn-sm btn-outline-danger" title="Unlink employee and remove roles"
                                    onclick="return confirm('Are you sure you want to unlink employee \'@user.LinkedEmployeeName\' and remove roles for user \'@user.UserName\'?');">
                                <i class="bi bi-person-x-fill"></i> Remove Role
                            </button>
                        </form>
                    }
                    else
                    {
                        // Button for not linked User (opens modal dialog) [btn-outline-success] [btn-success]
                        <button type="button" class="btn btn-sm btn-outline-success assign-role-btn"
                                data-bs-toggle="modal" data-bs-target="#assignRoleModal"
                                data-user-id="@user.UserId" data-user-name="@user.UserName"
                                title="Link user to an employee and assign role">
                            <i class="bi bi-person-plus-fill"></i> Assign Role
                        </button>
                    }
                </td>
            </tr>
        }

    </tbody>

</table>


@* Assign Role modal dialog *@

<div class="modal fade" id="assignRoleModal" tabindex="-1" aria-labelledby="assignRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="AssignRole" method="post">
                @Html.AntiForgeryToken() @* another CSRF token *@
                <div class="modal-header">
                    <h5 class="modal-title" id="assignRoleModalLabel">Assign Role to User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="userId" id="modalUserId" /> @* JS put User ID *@

                    <div class="mb-3">
                        <label class="form-label">User:</label>
                        <p><strong id="modalUserName"></strong></p> @* JS put UserName *@
                    </div>

                    <div class="mb-3">
                        <label for="selectedEmployeeId" class="form-label">Select Employee to Link:</label>
                        <select name="selectedEmployeeId" id="selectedEmployeeId" class="form-select" asp-items="@Model.UnlinkedEmployees" required>
                            <option value="">-- Select Employee --</option>
                        </select>
                        <div class="invalid-feedback">Please select an employee.</div> @* HTML5 validation *@
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Link and Assign Role</button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {

    <script>
        // Pass User data to Assign Role modal window
        var assignRoleModal = document.getElementById('assignRoleModal');

        if (assignRoleModal) {
            assignRoleModal.addEventListener('show.bs.modal', function (event) {
                // button that triggered modal window
                var button = event.relatedTarget;
                
                // extract data-bs-target data-bs-dismiss attributes
                var userId = button.getAttribute('data-user-id');
                var userName = button.getAttribute('data-user-name');

                // update modal window content
                var modalUserIdInput = assignRoleModal.querySelector('#modalUserId');
                var modalUserNameElement = assignRoleModal.querySelector('#modalUserName');

                modalUserIdInput.value = userId;
                modalUserNameElement.textContent = userName; // security, textContent

                // remove dropdown index when opening
                var employeeSelect = assignRoleModal.querySelector('#selectedEmployeeId');
                if(employeeSelect) {
                    employeeSelect.selectedIndex = 0;
                }
            });
        }
    </script>
}

