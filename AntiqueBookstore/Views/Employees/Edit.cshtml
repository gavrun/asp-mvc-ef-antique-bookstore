@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model AntiqueBookstore.Models.EmployeeEditViewModel

@{
    ViewData["Title"] = "Edit Employee";

    // Initial value of ID for comparison in JS validation
    var initialPositionId = Model.SelectedPositionId;
}

<h3>@ViewData["Title"]</h3>
<h4>Employee: @Model.FirstName @Model.LastName (ID: @Model.Id)</h4>
<hr />

<div class="row">
    <div class="col-md-8">
        @* with data attributes *@
        <form asp-action="Edit" id="editEmployeeForm" data-initial-position-id="@initialPositionId">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="IsActive" />

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="FirstName" class="form-label"></label>
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="LastName" class="form-label"></label>
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="HireDate" class="form-label"></label>
                        <input asp-for="HireDate" class="form-control" type="date" readonly />
                        <span asp-validation-for="HireDate" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        @* with data attributes *@
                        <label asp-for="SelectedPositionId" class="form-label"></label>
                        <select asp-for="SelectedPositionId" id="positionSelect"  class="form-select" asp-items="@Model.Positions"></select>
                        <span asp-validation-for="SelectedPositionId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Comment" class="form-label"></label>
                        <textarea asp-for="Comment" class="form-control" rows="4"></textarea> @* textarea *@
                        <span asp-validation-for="Comment" class="text-danger"></span>
                    </div>

                    @* NOTE: ApplicationUserId *@
                    @* <div class="mb-3">
                        <label asp-for="SelectedApplicationUserId" class="form-label"></label>
                        
                        @if (!string.IsNullOrEmpty(Model.CurrentUserEmail))
                        {
                            <p class="form-control-plaintext">Currently linked to: <strong>@Model.CurrentUserEmail</strong></p>
                        }

                        <select asp-for="SelectedApplicationUserId" class="form-select" asp-items="@Model.ApplicationUsers">*@
                            @* <option value="">-- No User Linked --</option> *@ @* BLOCKED: implemented in a separate page to avoid confusion *@
                        @* </select>
                        <span asp-validation-for="SelectedApplicationUserId" class="text-danger"></span>
                    </div> *@ 

                </div>
            </div>


            <div class="mt-4">
                <input type="submit" value="Save Changes" class="btn btn-success" /> 
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @* JS validation for Position change by data attributes *@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('editEmployeeForm');
            const positionSelect = document.getElementById('positionSelect');

            if (form && positionSelect) {
                // get ID from data attribute
                const initialPositionId = form.getAttribute('data-initial-position-id');

                form.addEventListener('submit', function (event) {
                    const currentPositionId = positionSelect.value;

                    if (currentPositionId !== initialPositionId) {

                        const confirmationMessage = 'Are you sure you want to change the position for the employee?';
                        if (!confirm(confirmationMessage)) {
                            // cancel the form submission if the user clicked "Cancel"
                            event.preventDefault();
                        }
                        // send form "OK"
                    }
                });
            } else {
                console.error("Could not find form or position select element for confirmation script.");
            }
        });
    </script>
}


