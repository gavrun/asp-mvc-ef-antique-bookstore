@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@using AntiqueBookstore.Domain.Entities;

@model IEnumerable<AntiqueBookstore.Models.OrderIndexViewModel>

@{
    ViewData["Title"] = "Orders";
    
    var orderStatuses = ViewData["OrderStatuses"] as List<OrderStatus>;
}

@* TempData messages *@
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-warning" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

<div class ="row mb-3 align-items-start">

    <div class="col-md-6">
        <h1>@ViewData["Title"]</h1>
        <p>
            <a asp-action="Create" class="btn btn-primary">Create New Order</a>
        </p>
    </div>

    @* info about Order Statuses *@
    <div class="col-md-6">
        @if (orderStatuses != null && orderStatuses.Any())
        {
            <div class="border p-2 small">
                <h6 class="mb-1 font-weight-bold">Order Statuses:</h6>
                @foreach (var status in orderStatuses)
                {
                    <span class="font-weight-bold">[@status.Name]</span>
                }
            </div>
        }
    </div>

</div>

<table class="table table-striped table-hover table-bordered">

    @* <thead class="thead-light">
        <tr>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Customer</th>
            <th>Sales Rep</th>
            <th>Status</th>
            <th>Total Amount</th>
            <th>Actions</th>
        </tr>
    </thead> *@

    @* Dynamically updated Table header *@

    <thead class="thead-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Id)</th>
            <th>@Html.DisplayNameFor(model => model.OrderDate)</th>
            <th>@Html.DisplayNameFor(model => model.CustomerName)</th>
            <th>@Html.DisplayNameFor(model => model.EmployeeName)</th>
            <th>@Html.DisplayNameFor(model => model.StatusName)</th>
            <th>@Html.DisplayNameFor(model => model.TotalAmount)</th>
            <th>Actions</th>
        </tr>
    </thead>

    @* ISSUE: parser, explicit else failsafe <text> *@

    @* <thead class="thead-light">
        <tr>
            <th>
                @if (Model.Any())
                {
                    @Html.DisplayNameFor(model => model.First().Id)
                }
                else
                {
                    <text>Order ID</text>
                }
            </th>
            <th>
                @if (Model.Any())
                {
                    @Html.DisplayNameFor(model => model.First().OrderDate)
                }
                else
                {
                    <text>Order Date</text>
                }
            </th>
            <th>
                @if (Model.Any())
                {
                    @Html.DisplayNameFor(model => model.First().CustomerName)
                }
                else
                {
                    <text>Customer</text>
                }
            </th>
            <th>
                @if (Model.Any())
                {
                    @Html.DisplayNameFor(model => model.First().EmployeeName)
                }
                else
                {
                    <text>Sales Rep</text>
                }
            </th>
            <th>
                @if (Model.Any())
                {
                    @Html.DisplayNameFor(model => model.First().StatusName)
                }
                else
                {
                    <text>Status</text>
                }
            </th>
            <th>
                @if (Model.Any())
                {
                    @Html.DisplayNameFor(model => model.First().TotalAmount)
                }
                else
                {
                    <text>Total Amount</text>
                }
            </th>
            <th>Actions</th> 
        </tr>
    </thead> *@

    <tbody>
        @if (Model.Any())
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusName)
                    </td>
                    <td class="text-right">
                        @Html.DisplayFor(modelItem => item.TotalAmount)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary" title="Edit Order">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="View Details">Details</a>
                        @* Cancel removed usability *@
                        @* @if (item.StatusName != "Cancelled")
                        {
                            <a asp-action="Cancel" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Cancel</a>
                        } *@
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center">No orders found.</td>
            </tr>
        }
    </tbody>

</table>
